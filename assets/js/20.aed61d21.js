(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{501:function(s,t,n){"use strict";n.r(t);var e=n(20),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("第一次接触Gin和Gorm，遇到了很多坑，分享出来让大家避免。")]),s._v(" "),n("h2",{attrs:{id:"说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[s._v("#")]),s._v(" 说明")]),s._v(" "),n("p",[s._v("有两个模型：User和Group。Group有一个Owner字段，Owner是指向User的外键。")]),s._v(" "),n("h2",{attrs:{id:"model层结构体设计"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#model层结构体设计"}},[s._v("#")]),s._v(" model层结构体设计")]),s._v(" "),n("div",{staticClass:"language-Go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" UserModel "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tID         "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('`json:"id" gorm:"primary_key"`')]),s._v("\n\tUsername   "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('`gorm:"unique_index"`')]),s._v("\n\tName       "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('`json:"name"`')]),s._v("\n\tPassword   "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('`json:"password"`')]),s._v("\n\tValidation "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('`json:"-"`')]),s._v("\n\tStatus     "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('`json:"status"`')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("div",{staticClass:"language-Go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[s._v("\tID      "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('`json:"id" gorm:"primary_key"`')]),s._v("\n\tName    "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('`json:"name"`')]),s._v("\n\tDesc    "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('`json:"desc"`')]),s._v("\n\tOwnerID "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v("\n\tOwner   UserModel "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('`gorm:"Foreignkey:OwnerID"`')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("Group中的OwnerID会成为数据库的owner_id字段，成为实际起作用的外键。而Owner属性是用于关联查询的，不会出现在数据库字段中。")]),s._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),n("p",[s._v("请注意，官方说明加上注释"),n("code",[s._v('gorm:"Foreignkey:OwnerID"')]),s._v("可以在AutoMigrate的时候自动添加外键，但是根据本人亲自实验，没有自动添加，后来发现是自己使用了V1版本的GORM，文档是V2版本的...")])]),s._v(" "),n("p",[s._v("在初始化数据库之后，使用"),n("code",[s._v('DB.Model(&models.GroupModel{}).AddForeignKey("owner_id", "user_models(id)", "CASCADE", "CASCADE")')]),s._v("添加外键关联。")]),s._v(" "),n("p",[s._v("该函数参数为：")]),s._v(" "),n("ol",[n("li",[s._v("数据库中需要创建外键的字段名（不是结构体中属性名）")]),s._v(" "),n("li",[s._v("外键关联的表(关联的字段)")]),s._v(" "),n("li",[s._v("删除的约束")]),s._v(" "),n("li",[s._v("更新的约束")])]),s._v(" "),n("h3",{attrs:{id:"model层中创建函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#model层中创建函数"}},[s._v("#")]),s._v(" model层中创建函数")]),s._v(" "),n("p",[s._v("创建的过程中我们需要设置ownerID为需要指向的用户，但无需设置Owner属性，因为Owner属性是用于关联查询返回数据的。")]),s._v(" "),n("h3",{attrs:{id:"model层查询函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#model层查询函数"}},[s._v("#")]),s._v(" model层查询函数")]),s._v(" "),n("p",[s._v("需要注意的是直接使用"),n("code",[s._v('DB.Where("id = ?", groupID).First(&group).Error')]),s._v("这样的查询方式，gorm是不会自动填充user的，需要使用"),n("code",[s._v('DB.Model(&group).Association("owner").Find(&group.Owner)')]),s._v("，其中"),n("code",[s._v("owner")]),s._v("是结构体中的属性，因为里面已经指定了该属性为外键，且字段为"),n("code",[s._v("ownerid")]),s._v("。因此使用该函数查询之后，会自动根据外键关联查询出owner并填充到结构体中。")])])}),[],!1,null,null,null);t.default=r.exports}}]);